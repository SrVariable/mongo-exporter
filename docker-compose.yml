name: mongo-exporter

services:
  database:
    container_name: mongo
    build:
      context: docker/mongo
    env_file: .env
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
    networks:
      - mongo-exporter-network
    ports:
      - ${DB_PORT}:27017
    restart: unless-stopped
    tty: true
    volumes:
      - mongo-data:/data/db

  app:
    container_name: app
    build:
      # NOTE: Set the context to the current directory to have reference for go.mod, go.sum
      context: .
      dockerfile: docker/golang/Dockerfile
    env_file: .env
    depends_on:
      - database
    networks:
      - mongo-exporter-network
    ports:
      - ${APP_PORT}:8080
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks:
      - mongo-exporter-network
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom-data:/prometheus

  grafana:
    image: grafana/grafana:11.6.0
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
    networks:
      - mongo-exporter-network
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana

volumes:
  mongo-data:
  prom-data:
  grafana-data:

networks:
  mongo-exporter-network:
    name: mongo-exporter-network
